<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="BillMapper">

	<resultMap id="mRetMapBill" type="com.gesoft.model.BillModel">
        <result property="id" column="id"/>
        <result property="billNo" column="billNo"/>
        <result property="customerId" column="customerId"/>
        <result property="billTime" column="billTime"/>
        <result property="prePayTime" column="prePayTime"/>
        <result property="businessId" column="businessId"/>
        <result property="billType" column="billType"/>
        <result property="payState" column="payState"/>
        <result property="payTime" column="payTime"/>
        <result property="payConfirmUser" column="payConfirmUser"/>
        <result property="cuserId" column="cuserId"/>
        <result property="ctime" column="ctime"/>

		<result property="stime" />
		<result property="pcustomerId" />
		<result property="pcontacts" />
		<result property="paddress" />
		<result property="ptel"/>
		<result property="orderTime" />
		<result property="orderType" />
		<result property="isBIll"/>
		<result property="billId"/>
		<result property="stockId"/>
		<result property="goodId" />
		<result property="goodsName"/>
		<result property="goodNum" />
		<result property="orderStatus" />
		<result property="orderId"/>
		<result property="orderName"/>
		<result property="pcustomerName"/>
		<result property="contacts"/>
		<result property="address"/>
		<result property="tel"/>
		<result property="billItemId"/>

		<!--<result property=""/>-->
		<!--<result property=""/>-->
		<!--<result property=""/>-->
		<!--<result property=""/>-->
		<!--<result property=""/>-->
		<!--<result property=""/>-->
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="BillMapper.columns">
	    <![CDATA[
		id,billNo,customerId,billTime,prePayTime,businessId,billType,payState,payTime,payConfirmUser,cuserId,ctime
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="BillMapper.insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO tab_bill (
        	id ,
        	billNo ,
        	customerId ,
        	billTime ,
        	prePayTime ,
        	businessId ,
        	billType ,
        	payTime ,
        	payConfirmUser ,
        	cuserId ,
        	ctime 
        ) VALUES (
        	#{id} ,
        	#{billNo} ,
        	#{customerId} ,
        	#{billTime} ,
        	#{prePayTime},
        	#{businessId} ,
        	#{billType} ,
        	#{payTime} ,
        	#{payConfirmUser} ,
        	#{cuserId} ,
        	#{ctime} 
        )
    ]]>
	</insert>

	<insert id="BillMapper.insertBillItem" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
        INSERT INTO tab_bill_inout_stock (
        	billId,
        	stockId
        ) VALUES (
        	#{billId} ,
        	#{stockId}
        )
    ]]>
	</insert>

	<!--billNo = #{billNo} ,
	customerId = #{customerId} ,
	billTime = #{billTime} ,
	prePayTime = #{prePayTime} ,
	businessId = #{businessId} ,
	billType = #{billType} ,
	payConfirmUser = #{payConfirmUser} ,
	cuserId = #{cuserId} ,
	ctime = #{ctime} -->
	<update id="BillMapper.update" >
    <![CDATA[
        UPDATE tab_bill SET
	         payState=1,
	         payTime = #{payTime}
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="BillMapper.delete">
    <![CDATA[
        DELETE FROM tab_bill WHERE
        id = #{id} 
    ]]>
    </delete>

	<delete id="BillMapper.deleteBefore">
	<![CDATA[
        DELETE FROM tab_bill_inout_stock WHERE
        billId = #{billId}
    ]]>
	</delete>

	<update id="BillMapper.updateBefore">
		<![CDATA[
        UPDATE tab_bill SET
	         customerId = #{customerId},
	         billTime = #{billTime},
	         prePayTime = #{prePayTime},
	         businessId = #{businessId}
        WHERE
	        id = #{id}
    ]]>
	</update>
    
    <select id="BillMapper.getById" resultMap="mRetMapBill">
		SELECT <include refid="BillMapper.columns" />
	    <![CDATA[
		    FROM tab_bill 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="BillMapper.findPage.where">
		<where>
			A.billType = #{billType}
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(billNo)">
				AND billNo LIKE CONCAT(CONCAT('%', #{billNo}), '%')
			</if>
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(customerId)">
				AND customerId = #{customerId}
			</if>
	       <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(billTimeBegin)">-->
				<!--AND billTime >= #{billTimeBegin}-->
		   <!--</if>-->
		   <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(billTimeEnd)">-->
				<!--AND billTime &lt;= #{billTimeEnd}-->
		   <!--</if>-->
	       <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(prePayTimeBegin)">-->
				<!--AND prePayTime >= #{prePayTimeBegin}-->
		   <!--</if>-->
		   <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(prePayTimeEnd)">-->
				<!--AND prePayTime &lt;= #{prePayTimeEnd}-->
		   <!--</if>-->
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(businessId)">
				AND businessId = #{businessId}
			</if>
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(billType)">
				AND billType = #{billType}
			</if>
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(payState)">
				AND payState = #{payState}
			</if>
	       <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(payTimeBegin)">-->
				<!--AND payTime >= #{payTimeBegin}-->
		   <!--</if>-->
		   <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(payTimeEnd)">-->
				<!--AND payTime &lt;= #{payTimeEnd}-->
		   <!--</if>-->
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(payConfirmUser)">
				AND payConfirmUser = #{payConfirmUser}
			</if>
	       <if test="@com.gesoft.util.Ognl@isNotEmpty(cuserId)">
				AND cuserId = #{cuserId}
			</if>
	       <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(ctimeBegin)">-->
				<!--AND ctime >= #{ctimeBegin}-->
		   <!--</if>-->
		   <!--<if test="@com.gesoft.util.Ognl@isNotEmpty(ctimeEnd)">-->
				<!--AND ctime &lt;= #{ctimeEnd}-->
		   <!--</if>-->
		</where>
	</sql>
		
    <select id="BillMapper.count" resultType="long">
        SELECT count(*)
		FROM tab_bill	A
		left join tab_customer B on A.customerId=B.id
		left join tab_business D on A.businessId=D.id
		<include refid="BillMapper.findPage.where"/>    
    </select>
    
    <!-- 分页查询 -->
    <select id="BillMapper.list" resultMap="mRetMapBill">
		SELECT
		A.id ,
		A.billNo ,
		A.customerId ,
		B.customerName,
		date_format(A.billTime,'%Y-%m-%d %T') as billTime ,
		date_format(A.prePayTime,'%Y-%m-%d %T') as prePayTime ,
		A.businessId ,
		D.business,
		A.billType ,
		A.payState ,
		date_format(A.payTime,'%Y-%m-%d %T') as payTime ,
		A.payConfirmUser ,
		A.cuserId ,
		date_format(A.ctime,'%Y-%m-%d %T')  as ctime
		FROM tab_bill	A
		left join tab_customer B on A.customerId=B.id
		left join tab_business D on A.businessId=D.id
		<include refid="BillMapper.findPage.where"/>
		<if test="@com.gesoft.util.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		LIMIT #{startNum}, #{pageSize}
    </select>

	<select id="BillMapper.queryInoutCnt" resultType="long">
		SELECT COUNT(*)
		FROM tab_inout_stock A
		WHERE A.orderType = #{orderType} AND A.isBIll=0 AND A.businessId = #{businessId}
	</select>

	<select id="BillMapper.queryInout" resultMap="mRetMapBill">
		SELECT A.id,A.businessId,B.business,
		date_format(A.stime,'%Y-%m-%d %T') as stime,
		F.pcustomerId,G.customerName pcustomerName,F.pcontacts,F.paddress,F.ptel,
		<!--G.consigneeName pconsigneeName,G.consigneeTel pconsigneeTel,G.billingAddress billingAddress,-->
		F.customerId,K.customerName,F.ccontacts contacts,F.caddress address,F.ctel tel,
		<!--K.consigneeName,K.consigneeTel,K.billingAddress,-->
		E.orderId,F.orderName,
		D.goodNum,H.goodId,J.goodsName,
		date_format(F.orderTime,'%Y-%m-%d %T') as orderTime
		FROM tab_inout_stock A
		left join tab_business B on B.id=A.businessId
		left join tab_inout_stock_item D on D.inout_stock_id=A.id
		left join tab_orderitem E on E.id=D.orderItemId
		LEFT JOIN tab_good_customer H on H.id=E.customerGoodId
		LEFT JOIN tab_goods J on J.id=H.goodId
		left join tab_order F on F.id=E.orderId
		left join tab_customer K on K.id=F.customerId
		left join tab_customer G on G.id=F.pcustomerId
		WHERE A.orderType = #{orderType} AND A.isBIll=0 AND A.businessId = #{businessId}
		GROUP BY A.id
		<if test="@com.gesoft.util.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		LIMIT #{startNum}, #{pageSize}
	</select>

	<!--入库-开票-->
	<!--<select id="BillMapper.queryInoutTypeIn" resultMap="mRetMapBill">-->
		<!--SELECT A.id,A.businessId,B.business,-->
		<!--date_format(A.stime,'%Y-%m-%d %T') as stime,-->
		<!--F.pcustomerId,G.customerName pcustomerName,F.pcontacts,F.paddress,F.ptel,-->
		<!--F.customerId,K.customerName,F.ccontacts contacts,F.caddress address,F.ctel tel,-->
		<!--E.orderId,F.orderName,D.goodNum,H.goodId,J.goodsName,-->
		<!--date_format(F.orderTime,'%Y-%m-%d %T') as orderTime-->
		<!--FROM tab_inout_stock A-->
		<!--left join tab_business B on B.id=A.businessId-->
		<!--left join tab_inout_stock_item D on D.inout_stock_id=A.id-->
		<!--left join tab_orderitem E on E.id=D.orderItemId-->
		<!--LEFT JOIN tab_good_customer H on H.id=E.customerGoodId-->
		<!--LEFT JOIN tab_goods J on J.id=H.goodId-->
		<!--left join tab_order F on F.id=E.orderId-->
		<!--left join tab_customer G on G.id=F.pcustomerId-->
		<!--left join tab_customer K on K.id=F.customerId-->
		<!--WHERE A.orderType = #{orderType} AND A.isBIll=0 AND A.businessId = #{businessId}-->
		<!--GROUP BY A.id-->
		<!--<if test="@com.gesoft.util.Ognl@isNotEmpty(sortColumns)">-->
			<!--ORDER BY ${sortColumns}-->
		<!--</if>-->
		<!--LIMIT #{startNum}, #{pageSize}-->
	<!--</select>-->

	<update id="BillMapper.updateBillStatus" >
		<![CDATA[
        UPDATE tab_inout_stock SET
	        isBIll = 1
        WHERE
	        id = #{stockId}
    ]]>
	</update>

	<update id="BillMapper.updateUnBillStatus">
		<![CDATA[
        UPDATE tab_inout_stock SET
	        isBIll = 0
        WHERE
	        id = #{stockId}
    ]]>
	</update>

	<select id="BillMapper.queryInoutItemCnt" resultType="long">
		SELECT COUNT(*)
		FROM tab_bill_inout_stock A
		left join tab_bill L on L.id=A.billId
		WHERE A.billId= #{billId}
	</select>

	<select id="BillMapper.queryInoutItem" resultMap="mRetMapBill">
		SELECT A.id billItemId,B.businessId,H.business,F.goodId,G.goodsName,D.goodNum,B.id,
		E.orderId,J.orderName,J.pcustomerId,K.customerName pcustomerName,J.pcontacts,J.paddress,J.ptel,
		L.customerId,M.customerName,M.contacts,M.address,M.tel,
		date_format(B.stime,'%Y-%m-%d %T') as stime,
		date_format(L.billTime,'%Y-%m-%d %T') as billTime,
		date_format(L.prePayTime,'%Y-%m-%d %T') as prePayTime,
		date_format(J.orderTime,'%Y-%m-%d %T') as orderTime
		FROM tab_bill_inout_stock A
		left join tab_bill L on L.id=A.billId
		left join tab_customer M on L.customerId=M.id
		LEFT JOIN tab_inout_stock B on B.id=A.stockId
		LEFT JOIN tab_inout_stock_item D on D.inout_stock_id=B.id
		LEFT JOIN tab_orderitem E on E.id=D.orderItemId
		left join tab_order J on J.id=E.orderId
		left join tab_customer K on K.id=J.pcustomerId
		LEFT JOIN tab_good_customer F on F.id=E.customerGoodId
		LEFT JOIN tab_goods G on G.id=F.goodId
		LEFT JOIN tab_business H on H.id=B.businessId and H.id=G.businessId
		WHERE A.billId= #{billId}
		GROUP BY A.id
		<if test="@com.gesoft.util.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		LIMIT #{startNum}, #{pageSize}
	</select>

	<update id="BillMapper.updatePayState" >
		<![CDATA[
        UPDATE tab_bill SET
	        payState = 1
        WHERE
	        id = #{id}
    ]]>
	</update>

	<update id="BillMapper.updateOrderFinalStatus">
		<![CDATA[
        UPDATE tab_order
        SET orderStatus=5
        WHERE id = #{orderId}
    ]]>
	</update>
</mapper>

