<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="OrderItemMapper">

    <resultMap id="mRetMapOrderItem" type="com.gesoft.model.OrderItemModel">
        <result property="id" column="id"/>
        <result property="orderId" column="orderId"/>
        <result property="orderNo"/>
        <result property="orderName" column="orderName"/>
        <result property="customerGoodId" column="customerGoodId"/>
        <result property="goodsName" column="goodsName"/>
        <result property="esgouNum" column="esgouNum"/>
        <result property="goodsUnit" column="goodsUnit"/>
        <result property="unitPrice" column="unitPrice"/>
        <result property="tmpNum" column="tmpNum"/>
        <result property="afterNum" column="afterNum"/>
        <result property="itemState" column="itemState"/>
        <result property="totalMoney" column="totalMoney"/>

        <result property="goodsId"/>
        <result property="blueprintId"/>
        <result property="goodsNum"/>
        <result property="price"/>
        <result property="unit"/>
        <result property="pname"/>
        <result property="storage"/>
       <!-- tab_inout_stock-->
        <result property="stime"/>
        <result property="businessId"/>
        <result property="business"/>
        <result property="isBIll"/>
        <result property="orderType"/>
        <result property="inout_stock_id"/>
        <result property="orderItemId"/>
        <result property="goodNum"/>
        <result property="goodId"/>
        <result property="customerGoodId"/>
        <result property="goodsName"/>
        <result property="text"/>
        <result property="treeId"/>

        <result property="stimeBegin"/>
        <result property="stimeEnd"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="OrderItemMapper.columns">
        <![CDATA[
		id,
		orderId,
		customerGoodId,
		esgouNum,
		deliveryTime,
		sortIndex,
		unitPrice
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="OrderItemMapper.insert" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO tab_orderitem (
        id,
		orderId,
		customerGoodId,
		esgouNum,
		tmpNum,
		deliveryTime,
		sortIndex,
		unitPrice
        ) VALUES (
        	#{id} ,
        	#{orderId} ,
        	#{customerGoodId} ,
        	#{esgouNum} ,
        	#{tmpNum} ,
        	#{deliveryTime} ,
        	#{sortIndex} ,
        	#{unitPrice}
        )
    ]]>
    </insert>

    <update id="OrderItemMapper.update" >
        <![CDATA[
        UPDATE tab_orderitem SET
	        customerGoodId = #{customerGoodId} ,
	        esgouNum = #{esgouNum} ,
	        tmpNum = #{tmpNum} ,
	        deliveryTime = #{deliveryTime} ,
	        sortIndex = #{sortIndex} ,
	        unitPrice = #{unitPrice}
        WHERE
	        id = #{id}
    ]]>
    </update>

    <!--添加出库细项表信息-->
    <insert id="OrderItemMapper.insertInStockItem" useGeneratedKeys="true" keyProperty="id">
         <![CDATA[
        INSERT INTO tab_in_stock_item(
		orderItemId,
		goodNum,
		stime,
		createUserId,
		createTime,
		modifyUserId,
		modifyTime
        ) VALUES (
            #{orderItemId},
        	#{goodNum},
        	now(),
        	#{createUserId},
		    now(),
		    #{modifyUserId},
		    now()
        )
    ]]>
    </insert>

    <insert id="OrderItemMapper.insertOutStockItem" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO tab_out_stock_item(
		orderItemId,
		inprice,
		outprice,
		goodNum,
		stime,
		createUserId,
		createTime,
		modifyUserId,
		modifyTime
        ) VALUES (
            #{orderItemId},
            #{inprice},
            #{outprice},
        	#{goodNum},
        	now(),
        	#{createUserId},
		    now(),
		    #{modifyUserId},
		    now()
        )
    ]]>
    </insert>

    <update id="OrderItemMapper.updateInoutStockItem">
        <![CDATA[
        UPDATE tab_out_stock_item SET
		inprice = #{inprice},
		outprice = #{outprice},
		modifyUserId = #{modifyUserId},
		modifyTime = now()
        WHERE  id = #{id}
    ]]>
    </update>


    <update id="OrderItemMapper.updateInoutStock">
          <![CDATA[
        UPDATE tab_inout_stock SET
		isBIll = #{isBIll},
		modifyUserId = #{modifyUserId},
		modifyTime = now(),
		businessId =# {businessId}
        WHERE
	        id = #{id}
    ]]>
    </update>

    <update id="OrderItemMapper.updateInoutNum">
     <![CDATA[
        UPDATE tab_orderitem SET tmpNum = tmpNum + #{tmpNum} WHERE id = #{id}
    ]]>
    </update>

    <delete id="OrderItemMapper.delete" >
        <![CDATA[
        DELETE FROM tab_orderitem WHERE
        id = #{id}
    ]]>
    </delete>

    <delete id="OrderItemMapper.deleteInoutStock" >
        <![CDATA[
        DELETE FROM tab_inout_stock WHERE
        id = #{id}
    ]]>
    </delete>
    <delete id="OrderItemMapper.deleteInoutStockByItemId" >
        <![CDATA[
        DELETE FROM tab_inout_stock_item WHERE
        orderItemId = #{id}
    ]]>
    </delete>


    <select id="OrderItemMapper.getById" resultMap="mRetMapOrderItem">
        SELECT <include refid="OrderItemMapper.columns" />
        <![CDATA[
		    FROM tab_orderitem
	        WHERE
		        id = #{id}
	    ]]>
    </select>

    <sql id="OrderItemMapper.findPage.where">
        <where>
            A.orderId =  #{orderId}
            <if test="@com.gesoft.util.Ognl@isNotEmpty(id)">
                AND A.id = #{id}
            </if>
            <if test="@com.gesoft.util.Ognl@isNotEmpty(customerGoodId)">
                AND A.customerGoodId = #{customerGoodId}
            </if>
            <if test="@com.gesoft.util.Ognl@isNotEmpty(unitPrice)">
                AND A.unitPrice = #{unitPrice}
            </if>
            <if test="@com.gesoft.util.Ognl@isNotEmpty(esgouNum)">
                AND A.esgouNum = #{esgouNum}
            </if>
        </where>
    </sql>

    <!--订单细项总数-->
    <select id="OrderItemMapper.count" resultType="long">
        SELECT count(*)
        FROM tab_orderitem A
        left join tab_order B on  A.orderId=B.id
        left join tab_good_customer F on A.customerGoodId=F.id
        left join tab_goods D on F.goodId=D.id
        left join tab_dict E on D.specUnit=E.dictNo
        <include refid="OrderItemMapper.findPage.where"/>
    </select>

    <!-- 分页查询订单细项-->
    <select id="OrderItemMapper.list" resultMap="mRetMapOrderItem">
        SELECT
        A.id,
        A.orderId,
        A.customerGoodId,
        A.esgouNum,
        DATE_FORMAT(A.deliveryTime,'%Y-%m-%d') as deliveryTime,
        A.sortIndex,
        A.unitPrice as price,
        A.tmpNum,
        D.goodsName,
        F.materialNum,
        G.materialNum as ycmaterialNum,
        F.isHasLadder,
        F.goodsId,
        F.price AS oneprice,
        D.specUnit,
        E.dictName,
        A.esgouNum * A.unitPrice AS totalMoney
        FROM
        tab_orderitem A
        LEFT JOIN tab_blueprint F ON A.customerGoodId = F.id
        left join tab_good_customer G ON F.goodsId = G.id
        LEFT JOIN tab_goods D ON G.goodId = D.id
        LEFT JOIN tab_dict E ON F.unit = E.dictNo
    <include refid="OrderItemMapper.findPage.where"/>
        order by A.sortIndex
</select>

    <select id="OrderItemMapper.list2" resultMap="mRetMapOrderItem">
        SELECT
        A.id,
        A.orderId,
        A.customerGoodId,
        A.esgouNum,
        date_format(A.deliveryTime,'%Y-%m-%d') as deliveryTime,
        A.unitPrice as price,
        A.sortIndex,
        A.tmpNum,
        D.goodsName,
        F.materialNum,
        F.isHasLadder,
        F.unitPrice as oneprice,
        D.specUnit,
        G.dictName as specUnitName,
        F.memo,
        F.unit,
        E.dictName,
        A.esgouNum * A.unitPrice AS totalMoney
        FROM
        tab_orderitem A
        LEFT JOIN tab_good_customer F ON A.customerGoodId = F.id
        LEFT JOIN tab_goods D ON F.goodId = D.id
        LEFT JOIN tab_dict E ON F.unit = E.dictNo
        LEFT JOIN tab_dict G ON D.specUnit = G.dictNo
        <include refid="OrderItemMapper.findPage.where"/>
        order by A.sortIndex
    </select>


    <select id="OrderItemMapper.queryNumInfo" resultMap="mRetMapOrderItem">
        SELECT
            A.id  as blueprintId,
            A.materialNum,
            A.price,
            A.goodsId,
            A.isHasLadder,
            B.goodsName,
            D.dictName
        FROM
            tab_blueprint A
        left join tab_good_customer G ON A.goodsId = G.id
        LEFT JOIN tab_goods B ON G.goodId = B.id
        LEFT JOIN tab_dict D ON A.unit = D.dictNo
        WHERE
            A.id = #{blueprintId}
    </select>

    <select id="OrderItemMapper.queryNumInfo2" resultMap="mRetMapOrderItem">
        SELECT
        A.id as blueprintId,
        A.materialNum,
        A.unitPrice as price,
        A.goodId as goodsId,
        A.isHasLadder,
        B.goodsName,
        D.dictName
        FROM
        tab_good_customer A
        LEFT JOIN tab_goods B ON A.goodId = B.id
        LEFT JOIN tab_dict D ON A.unit = D.dictNo
        WHERE
        A.id = #{blueprintId}
    </select>

  <select id="OrderItemMapper.goodsPlan" resultMap="mRetMapOrderItem">
	  SELECT A.id,
	  A.pname,
      A.goodsId,
      A.goodsNum,
      A.price,
      A.unit
      FROM tab_blueprint A
      WHERE A.goodsId = #{goodsId}
  </select>

    <select id="OrderItemMapper.getBluePrintInfo" resultMap="mRetMapOrderItem">
        SELECT
            t.id as customerGoodId,
            t.isHasLadder,
            t.price
        FROM
            tab_blueprint t
        WHERE
            t.pname = #{customerId}
        and t.goodsId = #{customerGoodId} LIMIT 0,1
    </select>

    <!--查询采购订单树父节点-->
    <select id="OrderItemMapper.queryInOrderTree" resultMap="mRetMapOrderItem">
        SELECT A.id as treeId,A.orderName text
        FROM tab_orderitem B
        LEFT JOIN tab_order A on B.orderId = A.id
        left join tab_good_customer F on B.customerGoodId=F.id
        left join tab_goods D on F.goodId=D.id
        WHERE 1=1
        AND A.orderStatus!=-1 AND A.orderStatus!=5
        AND B.esgouNum != B.tmpNum
        <!--AND (A.orderStatus = 1 or A.orderStatus=2 or A.orderStatus=3)-->
        AND A.orderType = #{orderType}
        <if test="@com.gesoft.util.Ognl@isNotEmpty(businessId)">
            AND D.businessId= #{businessId}
        </if>
        <if test="@com.gesoft.util.Ognl@isNotEmpty(orderNo)">
            AND A.orderNo LIKE CONCAT(CONCAT('%', #{orderNo}), '%')
        </if>
        <if test="@com.gesoft.util.Ognl@isNotEmpty(orderName)">
            AND A.orderName LIKE CONCAT(CONCAT('%', #{orderName}), '%')
        </if>
        <if test="@com.gesoft.util.Ognl@isNotEmpty(materialNum)">
            AND F.materialNum LIKE CONCAT(CONCAT('%', #{materialNum}), '%')
        </if>
        GROUP BY A.id
    </select>
    <!--查询采购订单树子节点-->
    <select id="OrderItemMapper.queryOrderTree1" resultMap="mRetMapOrderItem">
        SELECT B.id as treeId,B.customerGoodId,F.goodId,D.goodsName ,F.materialNum,B.esgouNum,B.tmpNum,F.storage,
        (B.esgouNum-B.tmpNum) as afterNum,A.orderName,A.orderType,B.unitPrice,
        concat( D.goodsName, '-' ,F.materialNum,'(',CONVERT(B.esgouNum-B.tmpNum,char),')') as text,B.orderId
        FROM tab_orderitem B
        left join tab_order A on A.id=B.orderId
        left join tab_good_customer F on B.customerGoodId=F.id
        left join tab_goods D on F.goodId=D.id
        where B.orderId = #{orderId}
        AND A.orderStatus!=-1 AND A.orderStatus!=5
        <!--AND (A.orderStatus = 1 or A.orderStatus=2 or A.orderStatus=3)-->
        AND B.esgouNum != B.tmpNum
        <if test="@com.gesoft.util.Ognl@isNotEmpty(materialNum)">
            AND F.materialNum  LIKE CONCAT(CONCAT('%', #{materialNum}), '%')
        </if>

    </select>

    <select id="OrderItemMapper.getItemIdByOrderId" resultMap="mRetMapOrderItem">
        select id from tab_orderitem where orderId = #{orderId}
    </select>

    <!--查询销售订单树父节点-->
    <select id="OrderItemMapper.queryOrderTree" resultMap="mRetMapOrderItem">
      SELECT A.id as treeId,A.orderName text
      FROM tab_orderitem B
      LEFT JOIN tab_order A ON A.id = B.orderId
      LEFT JOIN tab_blueprint F ON B.customerGoodId=F.id
      LEFT JOIN tab_good_customer G on F.goodsId=G.id
      LEFT JOIN tab_goods D ON G.goodId=D.id
      WHERE 1=1
      AND A.orderStatus!=-1 AND A.orderStatus!=5
      AND B.esgouNum != B.tmpNum
      <!--AND (A.orderStatus = 1 or A.orderStatus=2 or A.orderStatus=3)-->
      AND A.orderType = #{orderType}
      <if test="@com.gesoft.util.Ognl@isNotEmpty(businessId)">
          AND D.businessId= #{businessId}
      </if>
      <if test="@com.gesoft.util.Ognl@isNotEmpty(orderNo)">
          AND A.orderNo LIKE CONCAT(CONCAT('%', #{orderNo}), '%')
      </if>
      <if test="@com.gesoft.util.Ognl@isNotEmpty(orderName)">
          AND A.orderName LIKE CONCAT(CONCAT('%', #{orderName}), '%')
      </if>
      <if test="@com.gesoft.util.Ognl@isNotEmpty(materialNum)">
          AND F.materialNum LIKE CONCAT(CONCAT('%', #{materialNum}), '%')
      </if>
      <if test="@com.gesoft.util.Ognl@isNotEmpty(ycmaterialNum)">
         AND G.materialNum LIKE CONCAT(CONCAT('%', #{ycmaterialNum}), '%')
      </if>
      GROUP BY A.id
    </select>

    <!--查询销售订单树子节点-->
    <select id="OrderItemMapper.queryOrderTree2" resultMap="mRetMapOrderItem">
        SELECT
        A.id as treeId,
        A.orderId,
        B.orderName,
        F.goodsId as customerGoodId,
        A.esgouNum,
        A.unitPrice as outprice,
        g.unitPrice as inprice,
        A.tmpNum,
        (A.esgouNum - A.tmpNum) AS afterNum,
        G.storage,
        concat(D.goodsName,'-',G.materialNum,'-',F.materialNum,'(',CONVERT (A.esgouNum - A.tmpNum, CHAR),')') AS text,
        D.goodsName,
        F.materialNum,
        G.materialNum as ycmaterialNum,
        D.specUnit,
        D.businessId,
        D.id as goodId,
        E.dictName,
        A.esgouNum * A.unitPrice AS totalMoney
        FROM
        tab_orderitem A
        LEFT JOIN tab_order B ON A.orderId = B.id
        LEFT JOIN tab_blueprint F ON A.customerGoodId=F.id
        LEFT JOIN tab_good_customer G on F.goodsId=G.id
        LEFT JOIN tab_goods D ON G.goodId=D.id
        LEFT JOIN tab_dict E ON F.unit = E.dictNo
        where B.id = #{orderId}
        AND B.orderStatus!=-1 AND B.orderStatus!=5
        <!--AND (B.orderStatus = 1 or B.orderStatus=2 or B.orderStatus=3)-->
        AND A.esgouNum != A.tmpNum
        <if test="@com.gesoft.util.Ognl@isNotEmpty(materialNum)">
            AND F.materialNum  LIKE CONCAT(CONCAT('%', #{materialNum}), '%')
        </if>
        <if test="@com.gesoft.util.Ognl@isNotEmpty(ycmaterialNum)">
            AND G.materialNum  LIKE CONCAT(CONCAT('%', #{ycmaterialNum}), '%')
        </if>
    </select>

    <update id="OrderItemMapper.updateOutOrderStatus">
        <![CDATA[
        UPDATE tab_order
        SET orderStatus=2
        WHERE id = #{orderId}
    ]]>
    </update>

    <update id="OrderItemMapper.updateInOrderStatus">
        <![CDATA[
        UPDATE tab_order
        SET orderStatus=3
        WHERE id = #{orderId}
    ]]>
    </update>

    <update id="OrderItemMapper.updateOrderBillStatus">
        <![CDATA[
        UPDATE tab_order
        SET orderStatus=4
        WHERE id = #{orderId}
    ]]>
    </update>

    <!--入库-->
    <update id="OrderItemMapper.updateTabGoodsStorage">
        <![CDATA[
        UPDATE tab_goods
        SET storage = storage + #{tmpNum}
        WHERE id = #{goodId}
    ]]>
    </update>

    <update id="OrderItemMapper.updateTabGoodCustomerStorage">
        <![CDATA[
        UPDATE tab_good_customer
        SET storage = storage + #{tmpNum}
        WHERE id = #{customerGoodId}
    ]]>
    </update>

    <!--出库-->
    <update id="OrderItemMapper.updateTabGoodsStorageOut">
        <![CDATA[
        UPDATE tab_goods
        SET storage = storage - #{tmpNum}
        WHERE id = #{goodId}
    ]]>
    </update>

    <update id="OrderItemMapper.updateTabGoodCustomerStorageOut">
        <![CDATA[
        UPDATE tab_good_customer
        SET storage = storage - #{tmpNum}
        WHERE id = #{customerGoodId}
    ]]>
    </update>

    <!--修改厂商商品的货存-->
    <update id="OrderItemMapper.updateStorage" >
        update tab_good_customer set storage = storage +  #{afterNum}
        where id = #{customerGoodId}
    </update>

    <!--查询已入库数量-->
    <select id="OrderItemMapper.getOrderItemTepNum" resultType="long">
        SELECT tmpNum
        FROM tab_orderitem
        WHERE id = #{id}
    </select>

    <!-- 查询出库记录-->
    <select id="OrderItemMapper.getOutStockList" resultMap="mRetMapOrderItem">
        SELECT
        t.outprice as price,
        t.goodNum,
        b.materialNum,
        d.dictName as specUnitName,
        c.memo,
        g.goodsName,
        r.orderName
        FROM
        tab_out_stock_item t
        LEFT JOIN tab_orderitem o ON o.id = t.orderItemId
        LEFT JOIN tab_blueprint b ON b.id = o.customerGoodId
        LEFT JOIN tab_good_customer c ON c.id = b.goodsId
        LEFT JOIN tab_goods g ON g.id = c.goodId
        LEFT JOIN tab_order r ON r.id = o.orderId
        LEFT JOIN tab_dict d ON d.dictNo = g.specUnit
        WHERE
        o.orderId = #{orderId}
        and DATE_FORMAT(t.createTime,'%Y-%m-%d') = DATE_FORMAT(now(),'%Y-%m-%d')
    </select>

    <!-- 在选择的时间段内，查询某客户的销售金额-->
    <select id="OrderItemMapper.queryCList" resultMap="mRetMapOrderItem">
        SELECT
            t.inprice,
            t.outprice,
            t.goodNum,
            b.materialNum,
            c.materialNum AS ycmaterialNum,
            d.dictName AS specUnitName,
            DATE_FORMAT(o.deliveryTime,'%Y-%m-%d') as deliveryTime,
            DATE_FORMAT(t.createTime,'%Y-%m-%d') as createTime,
            g.goodsName,
            t.inprice * t.goodNum AS intotalMoney,
            t.outprice * t.goodNum AS outtotalMoney,
            r.orderName
        FROM
            tab_out_stock_item t
        LEFT JOIN tab_orderitem o ON o.id = t.orderItemId
        LEFT JOIN tab_blueprint b ON b.id = o.customerGoodId
        LEFT JOIN tab_good_customer c ON c.id = b.goodsId
        LEFT JOIN tab_goods g ON g.id = c.goodId
        LEFT JOIN tab_order r ON r.id = o.orderId
        LEFT JOIN tab_dict d ON d.dictNo = g.specUnit
        WHERE
            1 = 1
        <if test="@com.gesoft.util.Ognl@isNotEmpty(stimeBegin)">
            and DATE_FORMAT(t.createTime,'%Y-%m-%d') >= DATE_FORMAT(#{stimeBegin},'%Y-%m-%d')
        </if>
        <if test="@com.gesoft.util.Ognl@isNotEmpty(stimeEnd)">
            and DATE_FORMAT(#{stimeEnd},'%Y-%m-%d') >= DATE_FORMAT(t.createTime,'%Y-%m-%d')
        </if>
        <if test="@com.gesoft.util.Ognl@isNotEmpty(customerId)">
            and b.pname = #{customerId}
        </if>

    </select>

    <!-- 按照客户名，查询某客户所有产品销售价格/采购价格，导出列表-->
    <select id="OrderItemMapper.queryPriceList" resultMap="mRetMapOrderItem">
        SELECT
        o.customerName,
        t.materialNum,
        c.materialNum AS ycmaterialNum,
        g.goodsName,
        t.price,
        c.unitPrice,
        d.dictName
        FROM
        tab_blueprint t
        LEFT JOIN tab_good_customer c ON c.id = t.goodsId
        LEFT JOIN tab_goods g ON g.id = c.goodId
        LEFT JOIN tab_customer o ON o.id = t.pname
        LEFT JOIN tab_dict d ON d.dictNo = c.unit
        WHERE
        1 = 1
        <if test="@com.gesoft.util.Ognl@isNotEmpty(customerId)">
            and t.pname = #{customerId}
        </if>

    </select>
</mapper>
